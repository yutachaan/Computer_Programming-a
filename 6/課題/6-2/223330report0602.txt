/*
 * 科目：ソフトウェア演習Ⅰa
 * 学籍番号・氏名：B223330・佐藤 優太
 * 課題番号：課題6-2
 * 提出日：2022年5月31日
*/

(1) 100点

(2) 理由は大きく分けて二つある．
    一つ目は，コメントを読んだ方が早く理解できる処理には，積極的にコメント
    をしたことである．今回も，課題5と同様に，コードからすぐにわかることは
    コメントをしないという方針は崩していない．しかし，コードだけをみて直感
    的に理解するのが難しい箇所については，コメントを記載した．例えば，
    111行目から114行目の処理は，変数名などから，ファイルサイズを取得
    する処理であることは伝わるかもしれない．しかし，(これは存在しない関数
    だが)fsize()などの，名前から直感的にわかる関数を用いて取得して
    いるのではなく，feek()やfgetpos()を利用してファイルサイ
    ズを計測しているため，これらの仕様を理解していない限りこれがファイルサ
    イズを取得する処理だということがわからない可能性がある．そのため，この
    処理の前にはコメントをしている．他にも，例えば60行目の
    strncmp()は動作が直感的に分かりづらいため，コメントを入れてい
    る．
    二つ目は，コードの動作をそのまま書くのではなく，コードの意図を記載した
    ことである．例えば，56行目や63行目のclock()はプログラム実行
    開始からの経過時間を返す関数だが，ここではBM法のメイン部分の実行にか
    かった時間を求めるために使用している．そのため，56行目や63行目に
    「プログラム実行開始からの経過時間を記録」のようなコメントをするのでは
    なく，56行目で「計測開始」，63行目で「計測終了」とコメントしてい
    る．また，94行目や95行目の処理についても，この条件式を読んだだけで
    は結局何が目的なのかが伝わりにくいため，意図をコメントしている．このよ
    うなコードの意図を書くことは，単に理解度を上げるだけでなく，バグの発見
    にもつながることがある．プログラムの動作をそのまま書いたコメントでは，
    意図に反した動作をするバグを発見するのは難しいが，コードの意図をコメン
    トしておくことで，意図に反した動作をするバグに気づくことができる．
    以上の理由により，私自身はこのプログラムのコメントは100点だと判断し
    た．
